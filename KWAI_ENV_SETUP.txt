# üî• CONFIGURA√á√ÉO DO AMBIENTE KWAI EVENT API
# ================================================

## üìã PASSOS PARA CONFIGURAR:

### 1. Criar arquivo .env na raiz do projeto:
```bash
cp KWAI_TEST_CONFIG.env .env
```

### 2. Editar .env com suas credenciais reais:
```bash
# Credenciais obrigat√≥rias da Kwai
KWAI_PIXEL_ID=288912399858321
KWAI_ACCESS_TOKEN=seu_access_token_real_aqui

# Configura√ß√µes do ambiente
NODE_ENV=development
```

### 3. Executar teste de tracking:
```bash
node test-tracking-completo.js
```

### 4. Verificar na interface da Kwai:
- Acesse: https://business.kwai.com/
- V√° em "Test Events" do seu pixel
- Verifique se os eventos aparecem com "happened..."

## üéØ EVENTOS IMPLEMENTADOS:

‚úÖ EVENT_CONTENT_VIEW - Clique em CTA
‚úÖ EVENT_ADD_TO_CART - Gera√ß√£o de PIX  
‚úÖ EVENT_PURCHASE - Pagamento aprovado
‚úÖ EVENT_FORM_SUBMIT - Envio de formul√°rio
‚úÖ EVENT_INITIATED_CHECKOUT - In√≠cio do checkout
‚úÖ EVENT_COMPLETE_REGISTRATION - Registro completo

## üîç VERIFICA√á√ïES:

1. **Configura√ß√µes**: Todas as vari√°veis de ambiente est√£o definidas
2. **API**: URL correta: https://www.adsnebula.com/log/common/api
3. **Par√¢metros**: Todos os obrigat√≥rios implementados
4. **Headers**: Content-Type: application/json
5. **Valores fixos**: is_attributed=1, mmpcode="PL", pixelSdkVersion="9.9.9"

## üö® PROBLEMAS COMUNS:

- ‚ùå "KWAI_PIXEL_ID n√£o configurado" ‚Üí Criar arquivo .env
- ‚ùå "KWAI_ACCESS_TOKEN n√£o configurado" ‚Üí Preencher token real
- ‚ùå "Click ID n√£o fornecido" ‚Üí Verificar captura da URL
- ‚ùå "Evento n√£o aparece na Kwai" ‚Üí Verificar trackFlag=true para testes

## üìû SUPORTE:

Se os eventos n√£o aparecerem na interface da Kwai:
1. Verificar logs do console
2. Confirmar credenciais no .env
3. Testar com click_id v√°lido da interface da Kwai
4. Verificar se pixel est√° "Active" na plataforma
