/**
 * Script de teste para verificar configura√ß√µes do Kwai Event API
 * Execute com: node test-kwai-config.js
 */

require('dotenv').config();
const { getConfig } = require('./loadConfig');
const KwaiEventAPI = require('./services/kwaiEventAPI');

console.log('üß™ Testando configura√ß√µes do Kwai Event API...\n');

// 1. Verificar vari√°veis de ambiente
console.log('üìã Vari√°veis de ambiente:');
console.log('  KWAI_PIXEL_ID:', process.env.KWAI_PIXEL_ID ? '‚úÖ DEFINIDO' : '‚ùå N√ÉO DEFINIDO');
console.log('  KWAI_ACCESS_TOKEN:', process.env.KWAI_ACCESS_TOKEN ? '‚úÖ DEFINIDO' : '‚ùå N√ÉO DEFINIDO');
console.log('  NODE_ENV:', process.env.NODE_ENV || 'n√£o definido');
console.log('');

// 2. Verificar configura√ß√£o carregada
console.log('‚öôÔ∏è Configura√ß√£o carregada:');
const config = getConfig();
console.log('  Configura√ß√£o completa:', JSON.stringify(config.kwai, null, 2));
console.log('');

// 3. Testar servi√ßo KwaiEventAPI
console.log('üîß Testando servi√ßo KwaiEventAPI:');
try {
    const kwaiService = new KwaiEventAPI();
    
    console.log('  ‚úÖ Servi√ßo instanciado com sucesso');
    console.log('  Configura√ß√£o do servi√ßo:', JSON.stringify(kwaiService.config, null, 2));
    
    // Verificar se est√° configurado
    const isConfigured = kwaiService.isConfigured();
    console.log('  Servi√ßo configurado:', isConfigured ? '‚úÖ SIM' : '‚ùå N√ÉO');
    
    if (!isConfigured) {
        console.log('  ‚ùå Motivo: Configura√ß√µes obrigat√≥rias n√£o encontradas');
        console.log('  Verifique se KWAI_PIXEL_ID e KWAI_ACCESS_TOKEN est√£o definidos no .env');
    }
    
} catch (error) {
    console.log('  ‚ùå Erro ao instanciar servi√ßo:', error.message);
}
console.log('');

// 4. Testar endpoint da API
console.log('üåê Testando endpoint da API:');
console.log('  URL: /api/kwai-event');
console.log('  M√©todo: POST');
console.log('  Status: ‚úÖ Endpoint configurado no server.js');

// 5. Resumo
console.log('üìä RESUMO:');
const hasPixelId = !!process.env.KWAI_PIXEL_ID;
const hasAccessToken = !!process.env.KWAI_ACCESS_TOKEN;

if (hasPixelId && hasAccessToken) {
    console.log('  ‚úÖ Sistema Kwai Event API CONFIGURADO e funcionando');
    console.log('  ‚úÖ Tracking funcionar√° corretamente');
} else {
    console.log('  ‚ùå Sistema Kwai Event API N√ÉO CONFIGURADO');
    console.log('  ‚ùå Tracking N√ÉO funcionar√°');
    
    if (!hasPixelId) {
        console.log('  ‚ùå KWAI_PIXEL_ID n√£o definido');
    }
    if (!hasAccessToken) {
        console.log('  ‚ùå KWAI_ACCESS_TOKEN n√£o definido');
    }
    
    console.log('\nüîß Para configurar, adicione ao arquivo .env:');
    console.log('  KWAI_PIXEL_ID=seu_pixel_id_aqui');
    console.log('  KWAI_ACCESS_TOKEN=seu_access_token_aqui');
}

console.log('\nüéØ Pr√≥ximos passos:');
if (hasPixelId && hasAccessToken) {
    console.log('  1. ‚úÖ Configura√ß√£o OK');
    console.log('  2. ‚úÖ Servi√ßo funcionando');
    console.log('  3. ‚úÖ Endpoint configurado');
    console.log('  4. üîç Testar com p√°gina HTML');
    console.log('  5. üîç Verificar logs do servidor');
} else {
    console.log('  1. ‚ùå Configurar vari√°veis de ambiente');
    console.log('  2. üîÑ Reiniciar servidor');
    console.log('  3. üîç Testar configura√ß√£o novamente');
    console.log('  4. üîç Verificar logs do servidor');
}

console.log('\n‚ú® Teste conclu√≠do!');
